<Window x:Class="bing_wallpaper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:local="clr-namespace:bing_wallpaper"
        mc:Ignorable="d"
        Title="Bing Wallpaper" MinHeight="295" Height="295" Width="675.5" MinWidth="675.5" Icon="images/bing-wallpaper-icon.ico" ResizeMode="CanMinimize" Closing="Window_Closing" ShowInTaskbar="False" StateChanged="Window_StateChanged">
    <Window.Resources>
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#FFB900" />
        <SolidColorBrush x:Key="SolidBorderBrushHard" Color="#e6a700" />
        <SolidColorBrush x:Key="SoftGrey" Color="#9c9c9c" />
        
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid Name="tabHeader" Cursor="Hand">
                            <Border Name="OutBorder" BorderThickness="0,8,8,8" BorderBrush="White"/>
                            <Border Name="Border"
                                Margin="0,8,8,8"
                                Background="Transparent"
                                Opacity="0.8"
                                BorderThickness="5,0,0,0">
                            </Border>
                            <ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"            
                                    ContentSource="Header"
                                    Margin="12,0,12,3"
                                    RecognizesAccessKey="True"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="Foreground" Value="#9e9e9e"/>
                            </Trigger>
                            <Trigger SourceName="tabHeader" Property="IsMouseOver" Value="True">
                                <Setter TargetName="OutBorder" Property="BorderBrush" Value="AntiqueWhite" />
                                <Setter TargetName="tabHeader" Property="Background" Value="AntiqueWhite" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="AntiqueWhite" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type Hyperlink}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource SoftGrey}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Foreground" Value="SteelBlue" />
            <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
        </Style>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" />
        </ControlTemplate>
        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Border
                              x:Name="Border"
                              Grid.ColumnSpan="2"
                              CornerRadius="0"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="1" />
                            <Border
                              Grid.Column="0"
                              CornerRadius="0"
                              Background="Transparent"
                              BorderBrush="Transparent"
                              BorderThickness="0" />
                            <Path
                              x:Name="Arrow"
                              Grid.Column="1"    
                              Fill="{TemplateBinding Foreground}"
                              Stroke="{TemplateBinding Foreground}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 4 4 L 8 0 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Background" Value="White" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{StaticResource SoftGrey}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="3,5,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="1"
                                        BorderBrush="Gray"/>
                                    <ScrollViewer Margin="0,0,0,0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,1,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border
                            Name="Border"
                            Padding="3"
                            BorderThickness="1,0,0,0"
                            CornerRadius="0"
                            Background="Transparent"
                            BorderBrush="Transparent" >
                            <TextBlock TextAlignment="Left" VerticalAlignment="Center">
                                 <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="AntiqueWhite"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SoftGrey}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"  
                                  Width="13" 
                                  Height="13" 
                                  CornerRadius="0" 
                                  Background="White"
                                  BorderThickness="1"
                                  BorderBrush="Gray">
                                    <Path 
                                        Width="8" Height="8" 
                                        x:Name="CheckMark"
                                        SnapsToDevicePixels="False" 
                                        Stroke="{StaticResource SolidBorderBrush}"
                                        StrokeThickness="2"
                                        Data="M 0 3.5 L 3 7 L 8 0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SoftGrey}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="AntiqueWhite" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SolidBorderBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidBorderBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
      
        <Style x:Key="ButtonApply" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{StaticResource SolidBorderBrush}" Cursor="Hand" BorderThickness="1" Background="{StaticResource SolidBorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Cursor="Hand"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SolidBorderBrushHard}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SolidBorderBrushHard}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonCancel" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{StaticResource SoftGrey}" Cursor="Hand" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Cursor="Hand"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Gray"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <TabControl TabStripPlacement="Left" BorderThickness="0" SelectionChanged="OnSelectionChanged">
            <TabItem FontSize="13" Width="150" Height="40" BorderBrush="{x:Null}">
                <TabItem.Style>
                    <Style TargetType="TabItem" BasedOn="{StaticResource ResourceKey={x:Type TabItem}}">
                        <Setter Property="Header">
                            <Setter.Value>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="6*" />
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" Width="auto" Source="images/bing-icon-grey.ico"/>
                                    <TextBlock Grid.Column="1" Text="Bing Picture" Margin="10,0,0,0" VerticalAlignment="Center" />
                                </Grid>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Header">
                                    <Setter.Value>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*" />
                                                <ColumnDefinition Width="6*" />
                                            </Grid.ColumnDefinitions>
                                            <Image Grid.Column="0" Width="auto" Source="images/bing-icon.ico"/>
                                            <TextBlock Grid.Column="1"  Text="Bing Picture" Margin="10,0,0,0" VerticalAlignment="Center" />
                                        </Grid>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>

                <Grid>
                    <Image x:Name="image" HorizontalAlignment="Left" VerticalAlignment="Top" Loaded="LoadImage"/>
                    <Grid Margin="0,0,20,19.667" MaxHeight="140" Height="Auto" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="Auto" MaxWidth="191">
                        <Grid.Background>
                            <SolidColorBrush Color="Black" Opacity="0.6"/>
                        </Grid.Background>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" HorizontalAlignment="Left" Opacity="0.8" TextWrapping="Wrap" VerticalAlignment="Top" 
                        Foreground="White" FontSize="16" Padding="9,7,9,0" x:Name="title_window" />
                        <TextBlock Grid.Row="1" HorizontalAlignment="Left" Opacity="0.7" TextWrapping="Wrap" VerticalAlignment="Top" 
                        Foreground="White" FontSize="12" Padding="9,7,9,9" x:Name="copyright_window"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem FontSize="13" Width="150" Height="40" BorderBrush="{x:Null}">
                <TabItem.Style>
                    <Style TargetType="TabItem" BasedOn="{StaticResource ResourceKey={x:Type TabItem}}">
                        <Setter Property="Header">
                            <Setter.Value>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="6*" />
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" Width="auto" Source="images/settings-grey.ico"/>
                                    <TextBlock Grid.Column="1" Text="Settings" Margin="10,0,0,0" VerticalAlignment="Center" />
                                </Grid>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Header">
                                    <Setter.Value>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*" />
                                                <ColumnDefinition Width="6*" />
                                            </Grid.ColumnDefinitions>
                                            <Image Grid.Column="0" Width="auto" Source="images/settings-bing.ico"/>
                                            <TextBlock Grid.Column="1" Text="Settings" Margin="10,0,0,0" VerticalAlignment="Center" />
                                        </Grid>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition Height="2*" IsEnabled="False"></RowDefinition>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition Height="1.7*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" FontSize="20" Text="Aplication Settings" Margin="10,0,0,15" VerticalAlignment="Bottom"  />

                    <TextBlock Grid.Row="2" Grid.Column="0" FontSize="13" Text="Image Location" Margin="10,0,0,10" VerticalAlignment="Bottom" />
                    <ComboBox Grid.Row="2" Grid.Column="1" Width="205" HorizontalAlignment="Left" Margin="0,0,5,6" ItemsSource="{Binding LanguageOptions}"  Name="cmbLocation">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding EnglishName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <TextBlock Grid.Row="3" Grid.Column="0" FontSize="13" Text="Execution Period" Margin="10,0,0,10" VerticalAlignment="Bottom"  />
                    <ComboBox Grid.Row="3" Grid.Column="1" Width="205" HorizontalAlignment="Left" Margin="0,0,5,6" Name="cmbExecution" ItemsSource="{Binding ExecutionPeriods}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <TextBlock Grid.Row="4" Grid.Column="0" FontSize="13" Text="Run at Startup" Margin="10,0,0,10" VerticalAlignment="Bottom"  />
                    <CheckBox Name="RunAtStartup_Box" Grid.Row="4"  Grid.Column="1" Cursor="Hand" FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding RunAtStartup}"/>

                    <TextBlock Grid.Row="5" Grid.Column="0" FontSize="13" Text="Set Wallpaper" Margin="10,0,0,10" VerticalAlignment="Bottom"  />
                    <CheckBox Name="SetWallpaper_Box" Grid.Row="5" Grid.Column="1" Cursor="Hand" FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding SetWallpaper}"/>

                    <TextBlock Grid.Row="6" Grid.Column="0" FontSize="13" Text="Set Lock Screen" Margin="10,0,0,10" VerticalAlignment="Bottom" />
                    <CheckBox Name="SetLockScreen_Box" Grid.Row="6" Grid.Column="1" Cursor="Hand" FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="False" IsChecked="{Binding SetLockScreen}"/>

                    <Grid Grid.Row="7" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Button Margin="0,8,10,-5"  Grid.Column="0" Style="{DynamicResource ButtonCancel}" Click="Button_Click_Reset">
                            <TextBlock FontSize="14">Reset</TextBlock>
                        </Button>
                        <Button Margin="0,8,10,-5" Grid.Column="1" Style="{DynamicResource ButtonApply}" Click="Button_Click_Apply">
                            <DockPanel>
                                <Image Source="images/bing-icon-white.ico" Margin="-5,0,3,0"/>
                                <TextBlock VerticalAlignment="Center" Margin="0,0,0,3" FontSize="14" Foreground="White">Apply</TextBlock>
                            </DockPanel>
                        </Button>
                    </Grid>

                </Grid>
            </TabItem>
            <TabItem FontSize="13" Width="150" Height="40" BorderBrush="{x:Null}">
                <TabItem.Style>
                    <Style TargetType="TabItem" BasedOn="{StaticResource ResourceKey={x:Type TabItem}}">
                        <Setter Property="Header">
                            <Setter.Value>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="6*" />
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" Width="auto" Source="images/info-grey.ico"/>
                                    <TextBlock Grid.Column="1" Text="Info" Margin="10,0,0,0" VerticalAlignment="Center" />
                                </Grid>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Header">
                                    <Setter.Value>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*" />
                                                <ColumnDefinition Width="6*" />
                                            </Grid.ColumnDefinitions>
                                            <Image Grid.Column="0" Width="auto" Source="images/info-bing.ico"/>
                                            <TextBlock Grid.Column="1" Text="Info" Margin="10,0,0,0" VerticalAlignment="Center" />
                                        </Grid>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="8*"></RowDefinition>
                        <RowDefinition Height="1*"></RowDefinition>
                        <RowDefinition Height="28*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="6*" />
                        </Grid.ColumnDefinitions>
                        <Image Grid.Row="0" Grid.Column="0" Width="auto" Source="images/bing-wallpaper-icon-inverse.ico"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" FontSize="36" Foreground="{StaticResource SolidBorderBrush}" Text="Bing Wallpaper" Margin="10,0,0,0" VerticalAlignment="Top" />
                    </Grid>
                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="5*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"></RowDefinition>
                            <RowDefinition Height="2*"></RowDefinition>
                            <RowDefinition Height="2*"></RowDefinition>
                            <RowDefinition Height="2*"></RowDefinition>
                            <RowDefinition Height="2*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" FontSize="13" Text="Authors" Margin="10,0,0,10" VerticalAlignment="Bottom" />
                        <TextBlock Grid.Row="0" Grid.Column="1" FontSize="13" Margin="10,0,0,10" VerticalAlignment="Bottom">
                            <Hyperlink NavigateUri="https://github.com/MiguelRozalen" RequestNavigate="Hyperlink_RequestNavigate" >
                                Miguel A. Rozalén
                            </Hyperlink>
                            <TextBlock> &amp; </TextBlock>
                            <Hyperlink NavigateUri="https://github.com/FranRodriguez" RequestNavigate="Hyperlink_RequestNavigate" >
                                Francisco J. Rodríguez
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock Grid.Row="1" Grid.Column="0" FontSize="13" Text="Version" Margin="10,0,0,10" VerticalAlignment="Bottom"  />
                        <TextBlock Grid.Row="1" Grid.Column="1" FontSize="13" Margin="10,0,0,10" VerticalAlignment="Bottom">1.17.10.11</TextBlock>
                        <TextBlock Grid.Row="2" Grid.Column="0" FontSize="13" Text="Release" Margin="10,0,0,10" VerticalAlignment="Bottom"  />
                        <TextBlock Grid.Row="2" Grid.Column="1" FontSize="13" Margin="10,0,0,10" VerticalAlignment="Bottom">October 2017-2</TextBlock>
                        <TextBlock Grid.Row="3" Grid.Column="0" FontSize="13" Text="Web" Margin="10,0,0,10" VerticalAlignment="Bottom"  />
                        <TextBlock Grid.Row="3" Grid.Column="1" FontSize="13" Margin="10,0,0,10" VerticalAlignment="Bottom">
                            <Hyperlink NavigateUri="https://miguelrozalen.github.io/bing-wallpaper/" RequestNavigate="Hyperlink_RequestNavigate">
                                https://miguelrozalen.github.io/bing-wallpaper/
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock Grid.Row="4" Grid.Column="0" FontSize="13" Text="Copyright" Margin="10,0,0,10" VerticalAlignment="Bottom"  />
                        <TextBlock Grid.Row="4" Grid.Column="1" FontSize="13" Text="GNU General Public License v3.0 2017" Margin="10,0,0,10" VerticalAlignment="Bottom"  />
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
        <tb:TaskbarIcon Visibility="Visible" DoubleClickCommand="{Binding DoubleClickCommandTaskBarIcon}"
                    IconSource="/images/bing-wallpaper-icon.ico" MenuActivation="RightClick" PopupActivation="DoubleClick">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Open" Click="MenuItem_Click_Open"/>
                    <Separator/>
                    <MenuItem Header="Exit" Click="MenuItem_Click_Exit"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
            <tb:TaskbarIcon.TrayToolTip>
                <Grid Margin="0,0,0,20" MaxHeight="140" Height="Auto" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="Auto" MaxWidth="191">
                    <Grid.Background>
                        <SolidColorBrush Color="Black" Opacity="0.6"/>
                    </Grid.Background>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <TextBlock x:Name="title_taskbar" Grid.Row="0" HorizontalAlignment="Left" Opacity="0.8" TextWrapping="Wrap" VerticalAlignment="Top" 
                                        Foreground="White" FontSize="16" Padding="9,7,9,0" />
                    <TextBlock x:Name="copyright_taskbar" Grid.Row="1" HorizontalAlignment="Left" Opacity="0.7" TextWrapping="Wrap" VerticalAlignment="Top" 
                                        Foreground="White" FontSize="12" Padding="9,7,9,9" />
                </Grid>
            </tb:TaskbarIcon.TrayToolTip>
        </tb:TaskbarIcon>
    </Grid>
</Window>
